// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week6.EsercitazioneFinale.Context;

namespace Week6.EsercitazioneFinale.Migrations
{
    [DbContext(typeof(InsuranceAgencyContext))]
    partial class InsuranceAgencyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.Customer", b =>
                {
                    b.Property<string>("TaxCode")
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TaxCode");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            TaxCode = "RSSMRA80D23T123P",
                            Address = "Via della vittoria, 67 Milano (MI)",
                            FirstName = "Maria",
                            LastName = "Rossi"
                        },
                        new
                        {
                            TaxCode = "SCCNTN93C56T345W",
                            Address = "Via D'annunzio 7",
                            FirstName = "Antonia",
                            LastName = "Sacchitella"
                        });
                });

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.InsurancePolicy", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nchar(16)");

                    b.Property<float>("InsuredAmount")
                        .HasColumnType("real");

                    b.Property<float>("MonthlyRate")
                        .HasColumnType("real");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StipulationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.HasKey("Number");

                    b.HasIndex("CustomerCode");

                    b.ToTable("Policy");

                    b.HasDiscriminator<string>("PolicyType").HasValue("InsurancePolicy");
                });

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.CarInsurance", b =>
                {
                    b.HasBaseType("Week6.EsercitazioneFinale.Models.InsurancePolicy");

                    b.Property<int>("Displacement")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasDiscriminator().HasValue("CarInsurance");

                    b.HasData(
                        new
                        {
                            Number = 1,
                            CustomerCode = "RSSMRA80D23T123P",
                            InsuredAmount = 2000f,
                            MonthlyRate = 50f,
                            StipulationDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Displacement = 2500,
                            Plate = "PP123"
                        });
                });

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.LifeInsurance", b =>
                {
                    b.HasBaseType("Week6.EsercitazioneFinale.Models.InsurancePolicy");

                    b.Property<int>("InsuredAge")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("LifeInsurance");
                });

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.TheftInsurance", b =>
                {
                    b.HasBaseType("Week6.EsercitazioneFinale.Models.InsurancePolicy");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("TheftInsurance");
                });

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.InsurancePolicy", b =>
                {
                    b.HasOne("Week6.EsercitazioneFinale.Models.Customer", "Customer")
                        .WithMany("Policies")
                        .HasForeignKey("CustomerCode");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Week6.EsercitazioneFinale.Models.Customer", b =>
                {
                    b.Navigation("Policies");
                });
#pragma warning restore 612, 618
        }
    }
}
